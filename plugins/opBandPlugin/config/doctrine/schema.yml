options:
  charset: utf8
actAs: [Timestampable]

Band:
  columns:
    id: { type: integer(4), primary: true, autoincrement: true, comment: "Serial number" }
    name: { type: string(64), default: "", notnull: true, comment: "Band name" }
    file_id: { type: integer(4), comment: "Top image file id" }
    band_category_id: { type: integer(4), comment: "Band category id" }
    official_url:     { type: string, default: "http://", notnull: false, comment: "Official Link"}
    member_list:      { type: string, default: "name1 (guitar)\rname2 (bass)",   notnull: false, comment: "members"}
  relations:
    File: { local: file_id, foreign: id, onDelete: set null }
    BandCategory: { local: band_category_id, foreign: id, onDelete: set null }
  indexes:
    name_UNIQUE:
      fields: [name]
      type: unique
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8
    comment: "Saves informations of bands"

BandMember:
  columns:
    id: { type: integer(4), primary: true, autoincrement: true, comment: "Serial number" }
    band_id: { type: integer(4), notnull: true, comment: "Band id" }
    member_id: { type: integer(4), notnull: true, comment: "Member id" }
    is_pre: { type: boolean, notnull: true, default: false, comment: "Is pre member?" }
    is_receive_mail_pc: { type: boolean, default: false, notnull: true, comment: "Notification of posting in band by computer E-mail." }
    is_receive_mail_mobile: { type: boolean, default: false, notnull: true, comment: "Notification of posting in band by mobile E-mail." }
  relations:
    Band: { local: band_id, foreign: id, onDelete: cascade }
    Member: { local: member_id, foreign: id, onDelete: cascade }
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8
    comment: "Saves informations of members joined"

BandMemberPosition:
  columns:
    id: { type: integer(4), primary: true, autoincrement: true, comment: "Serial number" }
    band_id: { type: integer(4), notnull: true, comment: "Band id" }
    member_id:    { type: integer(4), notnull: true, comment: "Member id" }
    band_member_id: { type: integer(4), notnull: true, comment: "Band Member id" }
    name: { type: string(32), notnull: true, comment: "Member''s position name in this band" }
  indexes:
    name_UNIQUE:
      fields: [band_member_id, name]
      type: unique
  relations:
    Band: { local: band_id, foreign: id, onDelete: cascade }
    Member: { local: member_id, foreign: id, onDelete: cascade }
    BandMember: { local: band_member_id, foreign: id, onDelete:cascade }
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8
    comment: "Saves informations of the Band''s member roles"

BandConfig:
  columns:
    id: { type: integer(4), primary: true, autoincrement: true, comment: "Serial number" }
    band_id: { type: integer(4), notnull: true, comment: "Band id" }
    name: { type: string(64), default: "", notnull: true, comment: "Configuration name" }
    value: { type: string, comment: "Configuration value" }
  relations:
    Band: { local: band_id, foreign: id, onDelete: cascade }
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8
    comment: "Saves configurations of communities"

BandCategory:
  actAs:
    NestedSet:
      hasManyRoots: true
      rootColumnName: tree_key
    Timestampable:
  columns:
    id: { type: integer(4), primary: true, autoincrement: true, comment: "Serial number" }
    name: { type: string(64), default: "", notnull: true, comment: "Category name" }
    is_allow_member_band: { type: boolean, default: true, notnull: true, comment: "Member can create this category band" }
    tree_key: { type: integer(4), comment: "Nested tree key" }
    sort_order: { type: integer(4), comment: "Order to sort" }
  indexes:
    lft_INDEX:
      fields: [lft]
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8
    comment: "Saves categories of band"

